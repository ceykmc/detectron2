# -*- coding: utf-8 -*-

from detectron2.config import CfgNode as CN


def add_config(cfg: CN):
    _C = cfg

    _C.MODEL.EFFICIENTNET = CN()

    _C.MODEL.EFFICIENTNET.OUT_FEATURES = ["res4", "res7", "res10", "res14", "res15"]

    _C.MODEL.EFFICIENTNET.GLOBAL_PARAMS = CN()
    _C.MODEL.EFFICIENTNET.GLOBAL_PARAMS.BATCH_NORM_MOMENTUM = 0.99
    _C.MODEL.EFFICIENTNET.GLOBAL_PARAMS.BATCH_NORM_EPSILON = 0.001
    _C.MODEL.EFFICIENTNET.GLOBAL_PARAMS.DROPOUT_RATE = 0.2
    _C.MODEL.EFFICIENTNET.GLOBAL_PARAMS.DROPOUT_CONNECT_RATE = 0.2
    _C.MODEL.EFFICIENTNET.GLOBAL_PARAMS.NUM_CLASSES = 1000
    _C.MODEL.EFFICIENTNET.GLOBAL_PARAMS.WIDTH_COEFFICIENT = 1
    _C.MODEL.EFFICIENTNET.GLOBAL_PARAMS.DEPTH_COEFFICIENT = 1
    _C.MODEL.EFFICIENTNET.GLOBAL_PARAMS.DEPTH_DIVISOR = 8
    _C.MODEL.EFFICIENTNET.GLOBAL_PARAMS.IMAGE_SIZE = (224, 224)

    _C.MODEL.EFFICIENTNET.BLOCKARGS = CN()
    _C.MODEL.EFFICIENTNET.BLOCKARGS.REPEAT_NUMS = [1, 2, 2, 3, 3, 4, 1]
    _C.MODEL.EFFICIENTNET.BLOCKARGS.EXPAND_RATIOS = [1, 6, 6, 6, 6, 6, 6]
    _C.MODEL.EFFICIENTNET.BLOCKARGS.SE_RATIOS = [0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25]
    _C.MODEL.EFFICIENTNET.BLOCKARGS.INPUT_FILTERS = [32, 16, 24, 40, 80, 112, 192]
    _C.MODEL.EFFICIENTNET.BLOCKARGS.OUTPUT_FILTERS = [16, 24, 40, 80, 112, 192, 320]
    _C.MODEL.EFFICIENTNET.BLOCKARGS.KERNEL_SIZES = [3, 3, 5, 3, 5, 5, 3]
    _C.MODEL.EFFICIENTNET.BLOCKARGS.STRIDES = [1, 2, 2, 2, 2, 2, 2]

    _C.MODEL.BIFPN = CN()
    _C.MODEL.BIFPN.IN_FEATURES = ["res4", "res7", "res10", "res14", "res15"]
    _C.MODEL.BIFPN.BIFPN_W = 64
    _C.MODEL.BIFPN.BIFPN_D = 3
